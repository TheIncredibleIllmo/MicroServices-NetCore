// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicesStore.Api.CartService.Persistence;

namespace ServicesStore.Api.CartService.Migrations
{
    [DbContext(typeof(CartContext))]
    partial class CartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ServicesStore.Api.CartService.Models.CartSession", b =>
                {
                    b.Property<int>("CartSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CartSessionId");

                    b.ToTable("CartSession");
                });

            modelBuilder.Entity("ServicesStore.Api.CartService.Models.CartSessionDetail", b =>
                {
                    b.Property<int>("CartSessionDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookGuid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CartSessionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CartSessionDetailId");

                    b.HasIndex("CartSessionId");

                    b.ToTable("CartSessionDetail");
                });

            modelBuilder.Entity("ServicesStore.Api.CartService.Models.CartSessionDetail", b =>
                {
                    b.HasOne("ServicesStore.Api.CartService.Models.CartSession", "CartSession")
                        .WithMany("Details")
                        .HasForeignKey("CartSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
